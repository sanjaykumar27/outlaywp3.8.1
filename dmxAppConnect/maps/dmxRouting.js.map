{"version":3,"sources":["config/config.js","components/route.js","components/view.js","components/link.js"],"names":["dmx","config","mapping","Component","initialData","params","isExact","isMatch","loading","path","url","tag","attributes","type","String","default","exact","Boolean","events","show","Event","hide","error","unauthorized","forbidden","notfound","render","node","this","detached","template","document","createElement","innerHTML","$node","$parse","keys","re","pathToRegexp","props","end","xhr","XMLHttpRequest","addEventListener","onload","bind","onabort","onerror","ontimeout","update","window","location","pathname","base","querySelector","route","content","replace","match","exec","set","reduce","key","index","name","loaded","data","children","splice","forEach","child","$destroy","abort","open","send","parentNode","appendChild","evalScripts","dispatchEvent","removeChild","scripts","querySelectorAll","array","script","newScript","src","replaceChild","event","status","responseText","bindings","grecaptcha","load","includes","setRequestHeader","assign","active","href","internal","BaseComponent","prototype","call","navigate","routeLink","setAttribute","isActive","split","ctrlKey","button","preventDefault","getAttribute","hash","history","pushState","title","requestUpdate","pushStateEvent","createEvent","initEvent"],"mappings":";;;;;;AAAAA,IAAAC,OAAAC,QAAA,EAAA,OCAAF,IAAAG,UAAA,QAAA,CAEAC,YAAA,CACAC,OAAA,GACAC,SAAA,EACAC,SAAA,EACAC,SAAA,EACAC,KAAA,GACAC,IAAA,IAGAC,IAAA,MAEAC,WAAA,CACAH,KAAA,CACAI,KAAAC,OACAC,QAAA,KAGAC,MAAA,CACAH,KAAAI,QACAF,SAAA,GAGAL,IAAA,CACAG,KAAAC,OACAC,QAAA,OAIAG,OAAA,CACAC,KAAAC,MACAC,KAAAD,MACAE,MAAAF,MACAG,aAAAH,MACAI,UAAAJ,MACAK,SAAAL,OAGAM,OAAA,SAAAC,GAGAC,KAAAC,SAAA,GACAD,KAAAE,SAAAC,SAAAC,cAAA,OACAJ,KAAAE,SAAAG,UAAAL,KAAAM,MAAAD,UACAL,KAAAM,MAAAD,UAAA,GACAL,KAAAO,OAAAP,KAAAE,UAEAF,KAAAQ,KAAA,GACAR,KAAAS,GAAArC,IAAAsC,aAAAV,KAAAW,MAAA9B,KAAAmB,KAAAQ,KAAA,CACAI,IAAAZ,KAAAW,MAAAvB,QAGAY,KAAAa,IAAA,IAAAC,eACAd,KAAAa,IAAAE,iBAAA,OAAAf,KAAAgB,OAAAC,KAAAjB,OACAA,KAAAa,IAAAE,iBAAA,QAAAf,KAAAkB,QAAAD,KAAAjB,OACAA,KAAAa,IAAAE,iBAAA,QAAAf,KAAAmB,QAAAF,KAAAjB,OACAA,KAAAa,IAAAE,iBAAA,UAAAf,KAAAoB,UAAAH,KAAAjB,OAEAA,KAAAqB,UAGAA,OAAA,WACA,IAAAxC,EAAAyC,OAAAC,SAAAC,SACAC,EAAAtB,SAAAuB,cAAA,wBACAC,EAAAxB,SAAAuB,cAAA,yBAEAD,GAAAA,EAAAG,UACA/C,EAAAA,EAAAgD,QAAAJ,EAAAG,QAAAC,QAAA,MAAA,IAAA,KAGAF,GAAAA,EAAAC,UACA/C,EAAAA,EAAAgD,QAAAzD,IAAAsC,aAAAiB,EAAAC,QAAA,GAAA,CAAAhB,KAAA,IAAA,IAAAiB,QAAA,UAAA,MAGA,IAAAC,EAAA9B,KAAAS,GAAAsB,KAAAlD,GAMA,GAJAmB,KAAAgC,IAAA,OAAAhC,KAAAW,MAAA9B,MACAmB,KAAAgC,IAAA,YAAAhC,KAAAW,MAAAvB,OACAY,KAAAgC,IAAA,YAAAF,GAEAA,EAAA,CAOA,GANA9B,KAAAgC,IAAA,MAAAF,EAAA,IACA9B,KAAAgC,IAAA,SAAAhC,KAAAQ,KAAAyB,OAAA,SAAAxD,EAAAyD,EAAAC,GAEA,OADA1D,EAAAyD,EAAAE,MAAAN,EAAAK,EAAA,GACA1D,GACA,KAEAuB,KAAAW,MAAA7B,KAAAkB,KAAAW,MAAA7B,KAAAkB,KAAAqC,QAAArC,KAAAsC,KAAA1D,QAEA,OAGAoB,KAAAW,MAAA7B,KAAAkB,KAAAW,MAAA7B,KAAAkB,KAAAqC,QAEArC,KAAAM,MAAAD,UAAA,GACAL,KAAAuC,SAAAC,OAAA,GAAAC,QAAA,SAAAC,GACAA,EAAAC,aAGA3C,KAAAgC,IAAA,WAAA,GAEAhC,KAAAqC,OAAArC,KAAAW,MAAA7B,IAEAkB,KAAAa,IAAA+B,QAEA5C,KAAAa,IAAAgC,KAAA,MAAA7C,KAAAW,MAAA7B,KAEAkB,KAAAa,IAAAiC,QACA9C,KAAAE,SAAA6C,aACA/C,KAAAM,MAAA0C,YAAAhD,KAAAE,UACAF,KAAAuC,SAAAvC,KAAAC,SACAD,KAAAC,SAAA,GACAD,KAAAiD,YAAAjD,KAAAM,OACAN,KAAAkD,cAAA,cAGAlD,KAAAa,IAAA+B,QACA5C,KAAAgC,IAAA,MAAA,IACAhC,KAAAgC,IAAA,SAAA,IACAhC,KAAAE,SAAA6C,aACA/C,KAAAM,MAAA6C,YAAAnD,KAAAE,UACAF,KAAAC,SAAAD,KAAAuC,SACAvC,KAAAuC,SAAA,GACAvC,KAAAkD,cAAA,UAKAD,YAAA,SAAAlD,GACA,IAAAqD,EAAArD,EAAAsD,iBAAA,qDAEAjF,IAAAkF,MAAAF,GAAAX,QAAA,SAAAc,GACA,IAAAC,EAAArD,SAAAC,cAAA,UACAoD,EAAAvE,KAAA,kBACAsE,EAAAE,MAAAD,EAAAC,IAAAF,EAAAE,KACAF,EAAAlD,YAAAmD,EAAAnD,UAAAkD,EAAAlD,WACAkD,EAAAR,WAAAW,aAAAF,EAAAD,MAIAvC,OAAA,SAAA2C,GACA3D,KAAAgC,IAAA,WAAA,GACA,KAAAhC,KAAAa,IAAA+C,QAAA,GAAA5D,KAAAa,IAAA+C,QACA5D,KAAAE,SAAAG,UAAAL,KAAAa,IAAAgD,aACA7D,KAAA8D,SAAA,GAEA9D,KAAAO,OAAAP,KAAAE,UAEAF,KAAAM,MAAA0C,YAAAhD,KAAAE,UAEAF,KAAAiD,YAAAjD,KAAAM,OAEAgB,OAAAyC,YACA3F,IAAAkF,MAAAtD,KAAAM,MAAA+C,iBAAA,iBAAAZ,QAAA,SAAA1C,GACAgE,WAAAjE,OAAAC,KAIAC,KAAAkD,cAAA,SAEA,KAAAlD,KAAAa,IAAA+C,OACA5D,KAAAkD,cAAA,gBACA,KAAAlD,KAAAa,IAAA+C,OACA5D,KAAAkD,cAAA,aACA,KAAAlD,KAAAa,IAAA+C,OACA5D,KAAAkD,cAAA,YAEAlD,KAAAkD,cAAA,UAKAhC,QAAA,SAAAyC,GACA3D,KAAAgC,IAAA,WAAA,IAIAb,QAAA,SAAAwC,GACA3D,KAAAgC,IAAA,WAAA,GACAhC,KAAAkD,cAAA,UAGA9B,UAAA,SAAAuC,GACA3D,KAAAgC,IAAA,WAAA,GACAhC,KAAAkD,cAAA,YCzLA9E,IAAAG,UAAA,OAAA,CAEAC,YAAA,CACAI,SAAA,GAGAG,IAAA,MAEAO,OAAA,CACA0E,KAAAxE,MACAE,MAAAF,MACAG,aAAAH,MACAI,UAAAJ,MACAK,SAAAL,OAGAM,OAAA,SAAAC,GACAC,KAAAa,IAAA,IAAAC,eACAd,KAAAa,IAAAE,iBAAA,OAAAf,KAAAgB,OAAAC,KAAAjB,OACAA,KAAAa,IAAAE,iBAAA,QAAAf,KAAAkB,QAAAD,KAAAjB,OACAA,KAAAa,IAAAE,iBAAA,QAAAf,KAAAmB,QAAAF,KAAAjB,OACAA,KAAAa,IAAAE,iBAAA,UAAAf,KAAAoB,UAAAH,KAAAjB,OACAA,KAAAlB,IAAAyC,SAAAC,SAEAxB,KAAAO,UAGAc,OAAA,SAAAV,GACA,IAAA7B,EAAAyC,SAAAC,SAEAxB,KAAAlB,KAAAA,GAAAkB,KAAAsC,KAAA1D,SAKAoB,KAAAlB,KAAAA,IACAkB,KAAAgC,IAAA,WAAA,GAIAlD,KAFAkB,KAAAlB,IAAAA,GAEAmF,SAAA,KAAA,IAAA,KAAA,gBAEAjE,KAAAa,IAAA+B,QACA5C,KAAAa,IAAAgC,KAAA,MAAA/D,GACAkB,KAAAa,IAAAqD,iBAAA,SAAA,sBACAlE,KAAAa,IAAAiC,SAIAG,YAAA,SAAAlD,GACA,IAAAqD,EAAArD,EAAAsD,iBAAA,qDAEAjF,IAAAkF,MAAAF,GAAAX,QAAA,SAAAc,GACA,IAAAC,EAAArD,SAAAC,cAAA,UACAoD,EAAAvE,KAAA,kBACAsE,EAAAE,MAAAD,EAAAC,IAAAF,EAAAE,KACAF,EAAAlD,YAAAmD,EAAAnD,UAAAkD,EAAAlD,WACAkD,EAAAR,WAAAW,aAAAF,EAAAD,MAIAvC,OAAA,SAAA2C,GACA3D,KAAAgC,IAAA,WAAA,GACA,KAAAhC,KAAAa,IAAA+C,QAAA,GAAA5D,KAAAa,IAAA+C,QAEA5D,KAAAuC,SAAAC,OAAA,GAAAC,QAAA,SAAAC,GACAA,EAAAC,aAGA3C,KAAA8D,SAAA,GACA9D,KAAAM,MAAAD,UAAAL,KAAAa,IAAAgD,aAEA7D,KAAAO,OAAAP,KAAAM,OAEAN,KAAAiD,YAAAjD,KAAAM,OAEAgB,OAAAyC,YACA3F,IAAAkF,MAAAtD,KAAAM,MAAA+C,iBAAA,iBAAAZ,QAAA,SAAA1C,GACAgE,WAAAjE,OAAAC,KAIAC,KAAAkD,cAAA,SAEA,KAAAlD,KAAAa,IAAA+C,OACArC,SAAA4C,OAAAnE,KAAAa,IAAAgD,cACA,KAAA7D,KAAAa,IAAA+C,OACA5D,KAAAkD,cAAA,gBACA,KAAAlD,KAAAa,IAAA+C,OACA5D,KAAAkD,cAAA,aACA,KAAAlD,KAAAa,IAAA+C,OACA5D,KAAAkD,cAAA,YAEAlD,KAAAkD,cAAA,UAKAhC,QAAA,SAAAyC,GACA3D,KAAAgC,IAAA,WAAA,IAGAb,QAAA,SAAAwC,GACA3D,KAAAgC,IAAA,WAAA,GACAhC,KAAAkD,cAAA,UAGA9B,UAAA,SAAAuC,GACA3D,KAAAgC,IAAA,WAAA,GACAhC,KAAAkD,cAAA,YC7GA9E,IAAAG,UAAA,OAAA,CAEAC,YAAA,CACA4F,QAAA,GAGArF,IAAA,IAEAC,WAAA,CACAqF,KAAA,CACApF,KAAAC,OACAC,QAAA,IAGAmF,SAAA,CACArF,KAAAI,QACAF,SAAA,IAIAW,OAAA,SAAAC,GACA3B,IAAAmG,cAAAC,UAAA1E,OAAA2E,KAAAzE,KAAAD,GACAC,KAAAM,MAAAS,iBAAA,QAAAf,KAAA0E,SAAAzD,KAAAjB,OACAA,KAAA2E,WAAA,EACA3E,KAAAqB,OAAA,KAGAA,OAAA,SAAAV,GACA,GAAAA,EAAA0D,MAAArE,KAAAW,MAAA0D,KAAA,CACA,IAAAvF,EAAAkB,KAAAW,MAAA0D,KAEA,GAAA,KAAAvF,EAAA,IAAA,KAAAA,EAAA,GAAA,CACA,IAAA2C,EAAAtB,SAAAuB,cAAA,wBACAC,EAAAxB,SAAAuB,cAAA,yBAEA,GAAAC,GAAAA,EAAAC,QAAA,CACA,IAAA/C,EAAA8C,EAAAC,QAEAH,GAAAA,EAAAG,UACA/C,EAAA4C,EAAAG,QAAAC,QAAA,MAAA,IAAAhD,GAGA,IAAAiD,EAAA1D,IAAAsC,aAAA7B,EAAA,GAAA,CAAA+B,KAAA,IAAAmB,KAAAR,SAAAC,UAEA,GAAAM,EAGA,OAFA9B,KAAAM,MAAAsE,aAAA,OAAA9F,EAAA+C,QAAA,KAAAC,EAAA,GAAAD,QAAA,UAAA,YACA7B,KAAA2E,WAAA,IAMA,KAAA7F,EAAA,GACAkB,KAAA2E,WAAA,EAEA3E,KAAA2E,WAAA,EAGA3E,KAAAM,MAAAsE,aAAA,OAAA9F,GAGAkB,KAAAgC,IAAA,SAAAhC,KAAA6E,aAGAA,SAAA,WACA,IAAA/F,EAAAwC,OAAAC,SAAA8C,KACA,OAAArE,KAAAM,MAAA+D,MAAAvF,GAAAkB,KAAAM,MAAA+D,MAAAvF,EAAAgG,MAAA,KAAA,GAAAA,MAAA,KAAA,IAGAJ,SAAA,SAAAf,GACA,IAAA3D,KAAA2E,WAAA3E,KAAAW,MAAA2D,YAAAX,EAAAoB,SAAA,GAAApB,EAAAqB,OAAA,CACArB,EAAAsB,iBAEA,IAAAnG,EAAAkB,KAAAM,MAAA4E,aAAA,QAEA,GAAA,KAAApG,EAAA,GAEA,YADAwC,OAAAC,SAAA4D,KAAArG,GAIAwC,OAAA8D,QAAAC,UAAA,CAAAC,MAAAtF,KAAAM,MAAAgF,OAAAnF,SAAAmF,OAAA,GAAAxG,GACAkB,KAAAM,MAAAgF,QAAAnF,SAAAmF,MAAAtF,KAAAM,MAAAgF,OAEAlH,IAAAmH,gBAEA,IAAAC,EAAArF,SAAAsF,YAAA,SACAD,EAAAE,UAAA,aAAA,GAAA,GACApE,OAAA4B,cAAAsC","file":"../dmxRouting/dmxRouting.js","sourcesContent":["dmx.config.mapping['a'] = 'link';\r\n","dmx.Component('route', {\r\n\r\n    initialData: {\r\n        params: {}, // Key/value pairs parsed from the URL corresponding to the dynamic segments of the path\r\n        isExact: false,\r\n        isMatch: false,\r\n        loading: false, // for ajax loading\r\n        path: '', // The path pattern used to match. Useful for building nested Routes\r\n        url: '' // The matched portion of the URL. Useful for building nested Links\r\n    },\r\n\r\n    tag: 'div',\r\n\r\n    attributes: {\r\n        path: {\r\n            type: String,\r\n            default: '*'\r\n        },\r\n\r\n        exact: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n\r\n        url: {\r\n            type: String,\r\n            default: null\r\n        }\r\n    },\r\n\r\n    events: {\r\n        show: Event,\r\n        hide: Event,\r\n        error: Event, // ajax load error\r\n        unauthorized: Event,\r\n        forbidden: Event,\r\n        notfound: Event // ajax page not found\r\n    },\r\n\r\n    render: function(node) {\r\n        //dmx.BaseComponent.prototype.render.call(this, node);\r\n\r\n        this.detached = [];\r\n        this.template = document.createElement('div');\r\n        this.template.innerHTML = this.$node.innerHTML;\r\n        this.$node.innerHTML = '';\r\n        this.$parse(this.template);\r\n\r\n        this.keys = [];\r\n        this.re = dmx.pathToRegexp(this.props.path, this.keys, {\r\n            end: this.props.exact\r\n        });\r\n\r\n        this.xhr = new XMLHttpRequest();\r\n        this.xhr.addEventListener('load', this.onload.bind(this));\r\n        this.xhr.addEventListener('abort', this.onabort.bind(this));\r\n        this.xhr.addEventListener('error', this.onerror.bind(this));\r\n        this.xhr.addEventListener('timeout', this.ontimeout.bind(this));\r\n\r\n        this.update();\r\n    },\r\n\r\n    update: function() {\r\n        var path = window.location.pathname;\r\n        var base = document.querySelector('meta[name=\"ac:base\"]');\r\n        var route = document.querySelector('meta[name=\"ac:route\"]');\r\n\r\n        if (base && base.content) {\r\n            path = path.replace(base.content.replace(/\\/$/, ''), '');\r\n        }\r\n\r\n        if (route && route.content) {\r\n            path = path.replace(dmx.pathToRegexp(route.content, [], { end: false }), '').replace(/^(\\/+)?/, '/');\r\n        }\r\n\r\n        var match = this.re.exec(path);\r\n\r\n        this.set('path', this.props.path);\r\n        this.set('isExact', !!this.props.exact);\r\n        this.set('isMatch', !!match);\r\n\r\n        if (match) {\r\n            this.set('url', match[0]);\r\n            this.set('params', this.keys.reduce(function(params, key, index) {\r\n                params[key.name] = match[index + 1];\r\n                return params;\r\n            }, {}));\r\n\r\n            if (this.props.url && this.props.url == this.loaded && this.data.loading) {\r\n                // Url is loading\r\n                return;\r\n            }\r\n\r\n            if (this.props.url && this.props.url != this.loaded) {\r\n                // correctly destroy old content first\r\n                this.$node.innerHTML = '';\r\n                this.children.splice(0).forEach(function(child) {\r\n                    child.$destroy();\r\n                });\r\n\r\n                this.set('loading', true);\r\n\r\n                this.loaded = this.props.url;\r\n\r\n                this.xhr.abort();\r\n\r\n                this.xhr.open('GET', this.props.url);\r\n                //this.xhr.setRequestHeader('accept', 'text/fragment+html');\r\n                this.xhr.send();\r\n            } else if (!this.template.parentNode) {\r\n                this.$node.appendChild(this.template);\r\n                this.children = this.detached;\r\n                this.detached = [];\r\n                this.evalScripts(this.$node);\r\n                this.dispatchEvent('show');\r\n            }\r\n        } else {\r\n            this.xhr.abort();\r\n            this.set('url', '');\r\n            this.set('params', {});\r\n            if (this.template.parentNode) {\r\n                this.$node.removeChild(this.template);\r\n                this.detached = this.children;\r\n                this.children = [];\r\n                this.dispatchEvent('hide');\r\n            }\r\n        }\r\n    },\r\n\r\n    evalScripts: function(node) {\r\n        var scripts = node.querySelectorAll('script[type=\"text/javascript\"],script:not([type])');\r\n\r\n        dmx.array(scripts).forEach(function(script) {\r\n            var newScript = document.createElement('script');\r\n            newScript.type = 'text/javascript';\r\n            if (script.src) newScript.src = script.src;\r\n            if (script.innerHTML) newScript.innerHTML = script.innerHTML;\r\n            script.parentNode.replaceChild(newScript, script);\r\n        });\r\n    },\r\n\r\n    onload: function(event) {\r\n        this.set('loading', false);\r\n        if (this.xhr.status == 200 || this.xhr.status == 0) {\r\n            this.template.innerHTML = this.xhr.responseText;\r\n            this.bindings = [];\r\n\r\n            this.$parse(this.template);\r\n\r\n            this.$node.appendChild(this.template);\r\n\r\n            this.evalScripts(this.$node);\r\n\r\n            if (window.grecaptcha) {\r\n                dmx.array(this.$node.querySelectorAll('.g-recaptcha')).forEach(function(node) {\r\n                    grecaptcha.render(node);\r\n                });\r\n            }\r\n\r\n            this.dispatchEvent('show');\r\n        } else {\r\n            if (this.xhr.status == 401) {\r\n                this.dispatchEvent('unauthorized');\r\n            } else if (this.xhr.status == 403) {\r\n                this.dispatchEvent('forbidden');\r\n            } else if (this.xhr.status == 404) {\r\n                this.dispatchEvent('notfound');\r\n            } else {\r\n                this.dispatchEvent('error');\r\n            }\r\n        }\r\n    },\r\n\r\n    onabort: function(event) {\r\n        this.set('loading', false);\r\n        //this.dispatchEvent('error');\r\n    },\r\n\r\n    onerror: function(event) {\r\n        this.set('loading', false);\r\n        this.dispatchEvent('error');\r\n    },\r\n\r\n    ontimeout: function(event) {\r\n        this.set('loading', false);\r\n        this.dispatchEvent('error');\r\n    }\r\n\r\n});\r\n","dmx.Component('view', {\r\n\r\n    initialData: {\r\n        loading: false\r\n    },\r\n\r\n    tag: 'div',\r\n\r\n    events: {\r\n        load: Event,\r\n        error: Event,\r\n        unauthorized: Event,\r\n        forbidden: Event,\r\n        notfound: Event\r\n    },\r\n\r\n    render: function(node) {\r\n        this.xhr = new XMLHttpRequest();\r\n        this.xhr.addEventListener('load', this.onload.bind(this));\r\n        this.xhr.addEventListener('abort', this.onabort.bind(this));\r\n        this.xhr.addEventListener('error', this.onerror.bind(this));\r\n        this.xhr.addEventListener('timeout', this.ontimeout.bind(this));\r\n        this.url = location.pathname;\r\n\r\n        this.$parse();\r\n    },\r\n\r\n    update: function(props) {\r\n        var url = location.pathname;\r\n\r\n        if (this.url == url && this.data.loading) {\r\n            // Url is loading\r\n            return;\r\n        }\r\n\r\n        if (this.url != url) {\r\n            this.set('loading', true);\r\n\r\n            this.url = url;\r\n\r\n            url += (url.includes('?') ? '&' : '?') + 'fragment=true';\r\n\r\n            this.xhr.abort();\r\n            this.xhr.open('GET', url);\r\n            this.xhr.setRequestHeader('accept', 'text/fragment+html');\r\n            this.xhr.send();\r\n        }\r\n    },\r\n\r\n    evalScripts: function(node) {\r\n        var scripts = node.querySelectorAll('script[type=\"text/javascript\"],script:not([type])');\r\n\r\n        dmx.array(scripts).forEach(function(script) {\r\n            var newScript = document.createElement('script');\r\n            newScript.type = 'text/javascript';\r\n            if (script.src) newScript.src = script.src;\r\n            if (script.innerHTML) newScript.innerHTML = script.innerHTML;\r\n            script.parentNode.replaceChild(newScript, script);\r\n        });\r\n    },\r\n\r\n    onload: function(event) {\r\n        this.set('loading', false);\r\n        if (this.xhr.status == 200 || this.xhr.status == 0) {\r\n            // correctly destroy old children first\r\n            this.children.splice(0).forEach(function(child) {\r\n                child.$destroy();\r\n            });\r\n            \r\n            this.bindings = [];\r\n            this.$node.innerHTML = this.xhr.responseText;\r\n            \r\n            this.$parse(this.$node);\r\n\r\n            this.evalScripts(this.$node);\r\n\r\n            if (window.grecaptcha) {\r\n                dmx.array(this.$node.querySelectorAll('.g-recaptcha')).forEach(function(node) {\r\n                    grecaptcha.render(node);\r\n                });\r\n            }\r\n\r\n            this.dispatchEvent('load');\r\n        } else {\r\n            if (this.xhr.status == 222) {\r\n                location.assign(this.xhr.responseText);\r\n            } else if (this.xhr.status == 401) {\r\n                this.dispatchEvent('unauthorized');\r\n            } else if (this.xhr.status == 403) {\r\n                this.dispatchEvent('forbidden');\r\n            } else if (this.xhr.status == 404) {\r\n                this.dispatchEvent('notfound');\r\n            } else {\r\n                this.dispatchEvent('error');\r\n            }\r\n        }\r\n    },\r\n\r\n    onabort: function(event) {\r\n        this.set('loading', false);\r\n    },\r\n\r\n    onerror: function(event) {\r\n        this.set('loading', false);\r\n        this.dispatchEvent('error');\r\n    },\r\n\r\n    ontimeout: function(event) {\r\n        this.set('loading', false);\r\n        this.dispatchEvent('error');\r\n    }\r\n\r\n});","dmx.Component('link', {\r\n\r\n    initialData: {\r\n        active: false\r\n    },\r\n\r\n    tag: 'a',\r\n\r\n    attributes: {\r\n        href: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n\r\n        internal: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n\r\n    render: function(node) {\r\n        dmx.BaseComponent.prototype.render.call(this, node);\r\n        this.$node.addEventListener('click', this.navigate.bind(this));\r\n        this.routeLink = false;\r\n        this.update({});\r\n    },\r\n\r\n    update: function(props) {\r\n        if (props.href != this.props.href) {\r\n            var url = this.props.href;\r\n\r\n            if (url[0] == '.' && url[1] == '/') {\r\n                var base = document.querySelector('meta[name=\"ac:base\"]');\r\n                var route = document.querySelector('meta[name=\"ac:route\"]');\r\n\r\n                if (route && route.content) {\r\n                    var path = route.content;\r\n\r\n                    if (base && base.content) {\r\n                        path = base.content.replace(/\\/$/, '') + path;\r\n                    }\r\n\r\n                    var match = dmx.pathToRegexp(path, [], { end: false }).exec(location.pathname);\r\n\r\n                    if (match) {\r\n                        this.$node.setAttribute('href', url.replace('./', match[0].replace(/(\\/+)?$/, '/')));\r\n                        this.routeLink = true;\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (url[0] == '#') {\r\n                this.routeLink = true;\r\n            } else {\r\n                this.routeLink = false;\r\n            }\r\n\r\n            this.$node.setAttribute('href', url);\r\n        }\r\n\r\n        this.set('active', this.isActive());\r\n    },\r\n\r\n    isActive: function() {\r\n        var url = window.location.href;\r\n        return this.$node.href == url || this.$node.href == url.split(\"?\")[0].split(\"#\")[0];\r\n    },\r\n\r\n    navigate: function(event) {\r\n        if ((this.routeLink || this.props.internal) && !event.ctrlKey && event.button == 0) {\r\n            event.preventDefault();\r\n\r\n            var url = this.$node.getAttribute('href');\r\n\r\n            if (url[0] == '#') {\r\n                window.location.hash = url;\r\n                return;\r\n            }\r\n\r\n            window.history.pushState({ title: this.$node.title || document.title }, '', url);\r\n            if (this.$node.title) document.title = this.$node.title;\r\n            \r\n            dmx.requestUpdate();\r\n\r\n            var pushStateEvent = document.createEvent('Event');\r\n            pushStateEvent.initEvent('pushstate', false, false);\r\n            window.dispatchEvent(pushStateEvent);\r\n        }\r\n    }\r\n\r\n});\r\n"]}